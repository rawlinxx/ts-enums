{"version":3,"file":"ts-enums.umd.js","sources":["../src/ts-enums.ts"],"sourcesContent":["/**\n * An instance of the enum (for example, if you have an enumeration of seasons,\n * Winter would be an EnumValue.\n */\nexport abstract class EnumValue {\n  private _ordinal: number; // set in Enum.enumValuesFromObject\n  private _propName: string; // set in Enum.enumValuesFromObject\n\n  /**\n   * `initEnum()` on Enum closes the class, so subsequent calls to this\n   * constructor throw an exception.\n   */\n  constructor(private _description: string) {}\n\n  /**\n   * The description of the instance passed into the constructor - may be the\n   * same as the propName.\n   *\n   * @returns {string} The description\n   */\n  get description(): string {\n    return this._description;\n  }\n\n  /**\n   * Returns the index of the instance in the enum (0-based)\n   *\n   * @returns {number} The index of the instance in the enum (0-based)\n   */\n  get ordinal(): number {\n    return this._ordinal;\n  }\n\n  /**\n   * Returns the property name used for this instance in the Enum.\n   *\n   * @returns {string} the property name used for this instance in the Enum\n   */\n  get propName(): string {\n    return this._propName;\n  }\n\n  toString() {\n    return this.propName;\n  }\n}\n\nexport class Value<T = any> extends EnumValue {\n  payload?: T;\n  constructor(description: string, payload?: T) {\n    super(description);\n    this.payload = payload;\n  }\n}\n\n/**\n * This is an abstract class that is not intended to be used directly. Extend it\n * to turn your class into an enum (initialization is performed via\n * `this.initEnum()` within the constructor).\n */\nexport abstract class Enum<T extends EnumValue> {\n  private static enumValues: Map<string, EnumValue[]> = new Map<\n    string,\n    EnumValue[]\n  >();\n  private get name(): string {\n    return this.constructor.name;\n  }\n\n  /**\n   * Set up the enum and close the class. This must be called after the\n   * constructor to set up the logic.\n   *\n   * @param theEnum The enum to process\n   */\n  private static initEnum<T extends EnumValue>(theEnum: Enum<T>): void {\n    if (Enum.enumValues.has(theEnum.name)) {\n      throw new Error(`Duplicate name: ${theEnum.name}`);\n    }\n    let enumValues: T[] = this.enumValuesFromObject(theEnum);\n    Object.freeze(theEnum);\n    Enum.enumValues.set(theEnum.name, enumValues);\n  }\n\n  /**\n   * Extract the enumValues from the Enum. We set the ordinal and propName\n   * properties on the EnumValue. We also freeze the objects and lock the Enum\n   * and EnumValue to prevent future instantiation.\n   *\n   * @param theEnum The enum to process\n   * @returns {T[]} The array of EnumValues\n   */\n  private static enumValuesFromObject<T extends EnumValue>(\n    theEnum: Enum<T>\n  ): T[] {\n    const values: T[] = Object.getOwnPropertyNames(theEnum)\n      .filter((propName: string) => theEnum[propName] instanceof EnumValue)\n      .map((propName: string, i: number) => {\n        const enumValue: T = theEnum[propName];\n        Object.defineProperty(enumValue, '_propName', {\n          value: propName,\n          configurable: false,\n          writable: false,\n          enumerable: true\n        });\n        Object.defineProperty(enumValue, '_ordinal', {\n          value: i,\n          configurable: false,\n          writable: false,\n          enumerable: true\n        });\n        Object.freeze(enumValue);\n        return enumValue;\n      });\n\n    let descriptions: string[] = values.map(\n      (value: T): string => value.description\n    );\n    if (values.length !== this.unique(descriptions).length) {\n      throw new Error(\n        'All descriptions must be unique for a given enum type.' +\n          `Instead, there are multiples in ${theEnum.name}`\n      );\n    }\n    return values;\n  }\n\n  /**\n   * Extract the unique values from an array. Based on \n   * https://stackoverflow.com/a/23282057.\n   */\n  private static unique<T>(values: T[]): T[] {\n    return values.filter((value: T, i: number) => values.indexOf(value) === i);\n  }\n\n  private static values(name: string): EnumValue[] {\n    let values: EnumValue[] | undefined = this.enumValues.get(name);\n    return values ? [...values] : [];\n  }\n\n  /**\n   * Given the property name of an enum constant, return its value.\n   *\n   * @param propName The property name to search by\n   * @returns {undefined|T} The matching instance\n   */\n  byPropName(propName: string): T | undefined {\n    return this.values.find((x: T) => x.propName === propName);\n  }\n\n  /**\n   * Given the description of an enum constant, return its value.\n   *\n   * @param description The property name to search by\n   * @returns {undefined|T} The matching instance\n   */\n  byDescription(description: string): T | undefined {\n    return this.values.find((x: T) => x.description === description);\n  }\n\n  /**\n   * Return a defensively-copied array of all the elements of the enum.\n   *\n   * @returns {T[]} The array of EnumValues\n   */\n  get values(): T[] {\n    return Enum.values(this.name) as T[];\n  }\n\n  /**\n   * Returns a simple representation of the type.\n   *\n   * @returns {string} a simple representation of the type\n   */\n  toString(): string {\n    return this.name;\n  }\n\n  /**\n   * Set up the enum and close the class.\n   *\n   * @param name The name that will be used for internal storage - must be unique\n   */\n  initEnum(): void {\n    Enum.initEnum(this);\n  }\n}\n"],"names":[],"mappings":"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"}